# preseed.cfg for Debian installation with Chinese language, timezone, keyboard, custom disk partitions, and username change script

# 设置语言和区域
d-i debian-installer/locale string zh_CN.UTF-8
d-i debian-installer/language string zh
d-i debian-installer/country string CN
d-i debian-installer/keyboard/layout select US
d-i debian-installer/keyboard/model select Laptop

# 网络配置
d-i netcfg/choose_interface select auto
d-i netcfg/get_nameservers string 8.8.8.8 8.8.4.4
d-i netcfg/get_ipaddress string dhcp

# 设置镜像源
d-i mirror/country string US
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian

# 磁盘分区配置
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select custom
d-i partman-auto/confirm boolean true
d-i partman-auto/confirm_nooverwrite boolean true
d-i partman-partitioning/confirm_write_new_label boolean true

d-i partman-auto/expert_recipe string \
    efi::500 500 500 fat32 \
        $primary{ } method{ format } format{ } \
        use_filesystem{ } filesystem{ vfat } \
        mountpoint{ /boot/efi } \
    . \
    boot::1200 1200 1200 ext4 \
        $primary{ } method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ /boot } \
    . \
    tmp::2000 2000 2000 ext4 \
        $primary{ } method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ /tmp } \
    . \
    vartmp::2000 2000 2000 ext4 \
        $primary{ } method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ /var/tmp } \
    . \
    wwwlogs::3000 3000 3000 ext4 \
        $primary{ } method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ /www/wwwlogs } \
    . \
    varlog::3000 3000 3000 ext4 \
        $primary{ } method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ /var/log } \
    . \
    swap::2000 2000 2000 linux-swap \
        method{ swap } format{ } \
    . \
    root:: 0 0 -1 ext4 \
        method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ / } \
    .

# 设置时区
d-i time/zone string Asia/Shanghai

# 设置 root 密码
d-i passwd/root-password password "rPu%Z3)U'&nu9G%29xgATat&QR[^elPebInD"
d-i passwd/root-password-again password "rPu%Z3)U'&nu9G%29xgATat&QR[^elPebInD"

# 创建普通用户
d-i passwd/user-fullname string "jnfyic136dth24st2cqw7ke80m"
d-i passwd/username string jnfyic136dth24st2cqw7ke80m
d-i passwd/user-password password "L^k49,$1_@.&Vlsbdpk@1qDH#)uwU^3="
d-i passwd/user-password-again password "L^k49,$1_@.&Vlsbdpk@1qDH#)uwU^3="

# 包选择（只安装最小系统）
d-i pkgsel/include string openssh-server sudo
d-i pkgsel/skip-recommends boolean true

# 添加 SSH 公钥并禁用密码登录
d-i preseed/early_command string \
    mkdir -p /target/home/jnfyic136dth24st2cqw7ke80m/.ssh
    echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILoS9BcNKgseUBG3pfKFEI+jci99MO9Ow6gbROhecw/d " > /target/home/jnfyic136dth24st2cqw7ke80m/.ssh/authorized_keys
    wget -O /target/tmp/id_rsa.pub https://raw.githubusercontent.com/mzwrt/system_script/refs/heads/main/debian/gonggong.pub && \
    mkdir -p /target/home/jnfyic136dth24st2cqw7ke80m/.ssh && \
    cp /target/tmp/id_rsa.pub /target/home/jnfyic136dth24st2cqw7ke80m/.ssh/authorized_keys && \
    chown -R jnfyic136dth24st2cqw7ke80m:jnfyic136dth24st2cqw7ke80m /target/home/jnfyic136dth24st2cqw7ke80m/.ssh && \
    chmod 700 /target/home/jnfyic136dth24st2cqw7ke80m/.ssh && \
    chmod 600 /target/home/jnfyic136dth24st2cqw7ke80m/.ssh/authorized_keys && \
    echo 'PasswordAuthentication no' >> /target/etc/ssh/sshd_config && \
    # 写入 first_login.sh 脚本到目标系统
    echo '#!/bin/bash

DEFAULT_USER="jnfyic136dth24st2cqw7ke80m"

# 确保脚本在 root 权限下执行
if [ "$(id -u)" -ne 0 ]; then
  echo "您当前不是以 root 用户身份运行脚本。尝试使用 sudo 切换为 root 用户..."
  
  # 读取存储的 root 密码
  ROOT_PASSWORD=$(cat /etc/root_password.txt)
  
  # 使用 echo 和 sudo 执行 su 命令来切换到 root 用户
  echo "$ROOT_PASSWORD" | sudo -S bash "$0" "$@"
  
  # 脚本退出，避免继续执行
  exit 0
fi

echo "## 注意 ##"
echo "下面的操作较为关键，请谨慎操作。"

# 检查并删除非 root 和新用户的 sudo 权限
cleanup_sudo_users() {
  # 获取所有具有 sudo 权限的用户
  sudo_users=$(getent group sudo | cut -d: -f4)
  IFS=',' read -r -a sudo_user_array <<< "$sudo_users"

  # 删除非 root 和新用户的 sudo 权限
  for user in "${sudo_user_array[@]}"; do
    if [ "$user" != "root" ] && [ "$user" != "$new_user" ]; then
      echo "正在删除用户 $user 的 sudo 权限..."
      if getent passwd "$user" &>/dev/null; then
        deluser "$user" sudo
      fi
    fi
  done
}

# 设置新用户名
while true; do
  echo -n "请输入新的用户名: "
  read new_user
  if [ -z "$new_user" ]; then
    echo "用户名不能为空，请重新输入。"
  else
    break
  fi
done

# 用户名不同且目标目录不存在则重命名
if [ "$new_user" != "$DEFAULT_USER" ]; then
  if [ -d "/home/$new_user" ]; then
    echo "目录 /home/$new_user 已存在，跳过用户重命名。"
  else
    usermod -l "$new_user" "$DEFAULT_USER"
    groupmod -n "$new_user" "$DEFAULT_USER"
    mv "/home/$DEFAULT_USER" "/home/$new_user"
    echo "用户名已修改为 $new_user。"
  fi
else
  echo "用户名与默认相同，不做修改。"
fi

# 添加 sudo 权限
usermod -aG sudo "$new_user"

# 清理其他 sudo 用户
cleanup_sudo_users

# 修改主目录权限
chown -R "$new_user:$new_user" "/home/$new_user"

# 修改 root 密码
while true; do
  echo -n "请输入新的 root 密码: "
  read -s root_password_new
  echo
  if [ -z "$root_password_new" ]; then
    echo "root 密码不能为空，请重新输入。"
  else
    echo "$root_password_new" | passwd root
    break
  fi
done

# 修改新用户密码
while true; do
  echo -n "请输入 $new_user 的密码: "
  read -s new_user_password
  echo
  if [ -z "$new_user_password" ]; then
    echo "$new_user 的密码不能为空，请重新输入。"
  else
    echo "$new_user:$new_user_password" | chpasswd
    break
  fi
done

# 删除原始用户（如果已改名）
if [ "$new_user" != "$DEFAULT_USER" ]; then
  id "$DEFAULT_USER" &>/dev/null && userdel -f "$DEFAULT_USER"
fi

# 安装软件包
apt-get clean && apt-get autoclean && apt-get update -y && apt-get upgrade -y
apt install -y vim sudo curl wget ufw htop

# 最后确认
echo "所有设置已完成，是否确认无误并删除首次登录脚本？输入Y将清理所有自定义文件，输入N将重新设置。[Y/n]: "
read confirm
case "$confirm" in
  [Yy] )
    rm -f /etc/profile.d/first_login.sh
    [ -f /etc/root_password.txt ] && rm -f /etc/root_password.txt
    echo "首次登录配置完成。"
    exit 0
    ;;
  [Nn] )
    echo "请重新执行配置..."
    break
    ;;
  * )
    echo "请输入 Y 或 N。"
    ;;
esac' > /target/etc/profile.d/first_login.sh
# 设置脚本可执行
    chmod +x /target/etc/profile.d/first_login.sh
# 写入 root 密码
    echo "rPu%Z3)U'&nu9G%29xgATat&QR[^elPebInD" > /target/etc/root_password.txt
    chmod 644 /target/etc/root_password.txt


# 安装 GRUB 引导器
d-i grub-installer/only_debian boolean true
d-i grub-installer/bootdev string default

# 完成后重启
d-i finish-install/reboot_in_progress note
