#
# /etc/sysctl.conf - Configuration file for setting system variables
# See /etc/sysctl.d/ for additional system variables.
# See sysctl.conf (5) for information.
#

#kernel.domainname = example.com

# Uncomment the following to stop low-level messages on console
#kernel.printk = 3 4 1 3

###################################################################
# Functions previously found in netbase
#

# Uncomment the next two lines to enable Spoof protection (reverse-path filter)
# Turn on Source Address Verification in all interfaces to
# prevent some spoofing attacks
#net.ipv4.conf.default.rp_filter=1
#net.ipv4.conf.all.rp_filter=1

# Uncomment the next line to enable TCP/IP SYN cookies
# See http://lwn.net/Articles/277146/
# Note: This may impact IPv6 TCP sessions too
#net.ipv4.tcp_syncookies=1

# Uncomment the next line to enable packet forwarding for IPv4
#net.ipv4.ip_forward=1

# Uncomment the next line to enable packet forwarding for IPv6
#  Enabling this option disables Stateless Address Autoconfiguration
#  based on Router Advertisements for this host
#net.ipv6.conf.all.forwarding=1


###################################################################
# Additional settings - these settings can improve the network
# security of the host and prevent against some network attacks
# including spoofing attacks and man in the middle attacks through
# redirection. Some network environments, however, require that these
# settings are disabled so review and enable them as needed.
#
# Do not accept ICMP redirects (prevent MITM attacks)
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv6.conf.all.accept_redirects = 0
# _or_
# Accept ICMP redirects only for gateways listed in our default
# gateway list (enabled by default)
# net.ipv4.conf.all.secure_redirects = 1
#
# Do not send ICMP redirects (we are not a router)
#net.ipv4.conf.all.send_redirects = 0
#
# Do not accept IP source route packets (we are not a router)
#net.ipv4.conf.all.accept_source_route = 0
#net.ipv6.conf.all.accept_source_route = 0
#
# Log Martian Packets
#net.ipv4.conf.all.log_martians = 1
#

###################################################################
# Magic system request Key
# 0=disable, 1=enable all, >1 bitmask of sysrq functions
# See https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html
# for what other values do
#kernel.sysrq=438
#

fs.nr_open= 1200000
fs.file-max=200000

# BT
fs.inotify.max_user_instances = 1024
fs.inotify.max_user_watches = 81920000

# cis
fs.suid_dumpable = 0
vm.overcommit_memory = 1
net.core.somaxconn = 1024

# swap
vm.swappiness= 10
vm.vfs_cache_pressure=50

#这些设置告诉 Linux 内核不要接收或发送 ICMP 重定向数据包。攻击者可以使用这些 ICMP 重定向来修改路由表。
#所以禁用它听起来很合理（设置为零/假/0）。
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0

#tcp_max_orphans参数指定系统中允许的与任何用户文件 ID（用户文件句柄）无关的最大 TCP 套接字数。
net.ipv4.tcp_max_orphans = 65536

# tcp_fin_timeout确定套接字在我们（服务器）端关闭套接字后保持FIN-WAIT-2状态的时间。客户端（远程浏览器等）可能永远不会关闭此连接，这意味着它应该在超时到期后关闭。
net.ipv4.tcp_fin_timeout = 10

#多久检查一次连接是否长时间未使用？这在tcp_keepalive_time参数中说明。此值仅对使用SO_KEEPALIVE标志创建的套接字有意义。整数变量tcp_keepalive_intvl定义了正在执行的间隔尝试。然后乘法tcp_keepalive_probes * tcp_keepalive_intvl显示在没有响应的情况下断开连接的时间。默认情况下，此间隔设置为 75 秒，因此我们可以计算出连接将在大约 11 分钟后关闭并丢弃。
net.ipv4.tcp_keepalive_time = 1800
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_keepalive_probes = 5

# tcp_max_syn_backlog定义了内存中保存的连接请求的最大数量，我们没有收到来自连接客户端的确认。如果您发现服务器正在经历过载，您可以尝试增加该值。
net.ipv4.tcp_max_syn_backlog = 4096

#tcp_synack_retries控制被动 TCP 连接的SYNACK重传次数。尝试次数不应超过 255 次。值为 1 对应于大约 35 秒建立连接
net.ipv4.tcp_synack_retries = 1

#tcp_mem文件中的矢量变量（最小值、加载模式和最大值）包含 TCP 协议内存消耗的一般设置。此变量以页（通常为 4Kb）而非字节为单位进行测量
net.ipv4.tcp_mem = 50576 64768 98152

#tcp_rmem文件中的另一个矢量变量（最小值、默认值、最大值）。它包含 3 个整数，指定 TCP 套接字接收缓冲区的大小
net.ipv4.tcp_rmem = 4096 87380 16777216

#tcp_wmem文件中的另一个向量变量。它包含 3 个整数值，定义了为 TCP 套接字传输缓冲区保留的最小、默认和最大内存量
net.ipv4.tcp_wmem = 4096 65536 16777216

#tcp_orphan_retries值指定不成功尝试的次数，之后从服务器端关闭并销毁的 TCP 连接。默认值为 7。这大约是 50 秒到 16 分钟，具体取决于RTO。在高负载服务器上，减小此参数的值是有意义的，因为关闭的连接会消耗大量资源
net.ipv4.tcp_orphan_retries = 0

#根据内核开发者的建议，这种模式最好禁用，所以我们在这里设置为0
net.ipv4.tcp_syncookies = 1

#连接跟踪机制（例如，iptables）工作的最大连接数。如果该值太低，内核会拒绝传入的连接，并在系统日志中记录相应的条目
#net.ipv4.netfilter.ip_conntrack_max = 1677721

#它启用TCP 时间戳 (RFC 1323)。它们的存在允许您控制协议在高负载条件下的操作（有关 详细信息，请参阅tcp_congestion_control ）
net.ipv4.tcp_timestamps = 1

#允许TCP 选择性确认。这个选项实际上是为了高效使用某些网络的所有可用带宽的要求
net.ipv4.tcp_sack = 1

#该选项与用于管理 TCP 网络流量的协议有关。默认的bic和cubic实现包含大多数版本的 RedHat 内核及其克隆中的错误。建议使用htcp
#net.ipv4.tcp_congestion_control = htcp

net.ipv4.tcp_congestion_control=bbr
net.core.default_qdisc=fq

#表示关闭时不要将 TCP 连接测量值存储在缓存中。有时，它有助于提高性能。只需使用此选项即可获得更好的结果
net.ipv4.tcp_no_metrics_save = 1

#此选项与内核 2.4 有关。由于某些奇怪的原因，在 2.4 内核中，如果在 TCP 会话中发生窗口大小减小的重传，那么在接下来的 10 分钟内所有即将到来的到该主机的连接都将具有相同的减小的窗口大小。此选项只是刷新此设置。
net.ipv4.route.flush = 1

#这些选项正在激活IP 地址欺骗保护
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.lo.rp_filter = 1
net.ipv4.conf.ens3.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

#然后禁用源路由
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.lo.accept_source_route = 0
net.ipv4.conf.ens3.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

#使用此选项，我们增加了可用于建立传出连接的本地端口范围
#如果协议认为它是安全的，则允许重用TIME-WAIT套接字
net.ipv4.tcp_tw_reuse = 1

#允许动态调整 TCP 堆栈窗口的大小
net.ipv4.tcp_window_scaling = 1

#启用TIME_WAIT攻击保护(RFC 1337)
net.ipv4.tcp_rfc1337 = 1

#禁用数据包转发，因为我们仍然不是路由器
net.ipv4.ip_forward = 0

#表示不响应与广播数据包一起发送的ICMP ECHO请求
net.ipv4.icmp_echo_ignore_broadcasts = 1

#我们也可以完全禁用对ICMP ECHO请求的响应，这样服务器就不会响应PING请求。自己决定是否需要这个
net.ipv4.icmp_echo_ignore_all = 1

#不要响应虚假的错误响应。某些路由器通过向广播帧发送虚假响应来违反 RFC1122。此类违规通常通过内核警告记录。如果设置为 TRUE，内核将不会给出此类警告，这将避免日志文件混乱
net.ipv4.icmp_ignore_bogus_error_responses = 1

#等待连接的最大打开套接字数。增加默认值以提高服务器响应能力是有意义的
net.core.somaxconn = 65535

#如果网络接口接收数据包的速度快于内核处理数据包的速度，该参数定义放入队列中进行处理的最大数据包数
net.core.netdev_max_backlog = 1000

#最后一个值是默认接收缓冲区大小、默认发送缓冲区大小、接收数据缓冲区的最大大小和最大数据传输缓冲区大小。所有这些设置都适用于所有连接
net.core.rmem_default = 65536
net.core.wmem_default = 65536
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.all.forwarding = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.log_martians = 1
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.default.send_redirects = 0
kernel.randomize_va_space = 2

###################################################################
# IPv6 安全加强配置（附加）
###################################################################

# 禁用 IPv6 地址自动配置（RA）
net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0

# 禁用 IPv6 ICMP 重定向
#net.ipv6.conf.all.accept_redirects = 0
#net.ipv6.conf.default.accept_redirects = 0

# 禁用 IPv6 源路由
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

# 禁用 IPv6 数据包转发
#net.ipv6.conf.all.forwarding = 1
#net.ipv6.conf.default.forwarding = 1

#启用限制模式将限制受感染进程对同一用户下运行的其他进程执行 PTRACE_ATTACH 操作的能力。在限制模式下，ptrace 将继续以 root 用户身份运行。
kernel.yama.ptrace_scope = 2


# 可选项：忽略所有 ICMP 请求（慎用）
# net.ipv6.icmp_echo_ignore_all = 1

# 刷新 IPv6 路由表（避免某些 TCP 会话异常）
net.ipv6.route.flush = 1
